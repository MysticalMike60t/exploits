import React from "react";
import { torOnionLogo } from "../../assets/images/logos";
import { internetIcon } from "../../assets/images/icons";

const linksData = [
  {
    href: "https://www.exploit-db.com/",
    title: "Items found from hacks / vulnerabilities",
    text: "exploit-db.com",
  },
  {
    href: "http://g66ol3eb5ujdckzqqfmjsbpdjufmjd5nsgdipvxmsh7rckzlhywlzlqd.onion",
    title: "Dark web Messenger",
    text: "DREAD",
  },
  {
    href: "http://darkfailenbsdla5mal2mxn2uz66od5vtzd5qozslagrfzachha3f3id.onion/",
    title: "Dark Web Links",
    text: "dark.fail",
  },
  {
    href: "http://piratebayo3klnzokct3wt5yyxb2vpebbuyjl7m623iaxmqhsd52coid.onion",
    title: "Pirated Stuff",
    text: "PirateBay",
  },
  {
    href: "http://ddosxlvzzow7scc7egy75gpke54hgbg2frahxzaw6qq5osnzm7wistid.onion/wiki/Distributed_Denial_of_Secrets",
    title: "Leaked Documents",
    text: "Distributed Denial of Secrets",
  },
  {
    href: "https://ddosecrets.org",
    title: "Leaked Documents",
    text: "Distributed Denial of Secrets (Clearnet)",
  },
  {
    href: "https://www.occrp.org/en",
    title: "Organized Crime and Corruption Reporting Project",
    text: "Organized Crime and Corruption Reporting Project",
  },
  {
    href: "https://vault.fbi.gov",
    title: "Official FBI Vault",
    text: "FBI - The Vault",
  },
  {
    href: "http://deeeepv4bfndyatwkdzeciebqcwwlvgqa6mofdtsvwpon4elfut7lfqd.onion",
    title: "Directory Of Tor Hidden Services",
    text: "Deep Link Onion Dir",
  },
  {
    href: "https://tor.wiki/",
    title: "Tor Wiki",
    text: "Tor Wiki",
  },
];

const sortedLinks = linksData.sort((a, b) => a.text.localeCompare(b.text));

const generateListItem = (linkData) => {
  const isOnionLink = linkData.href.includes(".onion");
  const isClearnetLink =
    linkData.href.includes(".org") ||
    linkData.href.includes(".com") ||
    linkData.href.includes(".gov") ||
    linkData.href.includes(".wiki");

  return (
    <li className="Link wrapper" key={linkData.text}>
      <a
        href={linkData.href}
        lang="en"
        title={linkData.title}
        target="_blank"
        rel="noreferrer"
      >
        {linkData.text}
        {isOnionLink && (
          <span className="onion">
            <img src={torOnionLogo} alt="" />
          </span>
        )}
        {isClearnetLink && (
          <span className="clearnet">
            <img src={internetIcon} alt="" />
          </span>
        )}
      </a>
    </li>
  );
};

const Header = () => {
  return (
    <nav role="navigation">
      <header className="header" id="header">
        <ul className="nav-links">{sortedLinks.map(generateListItem)}</ul>
      </header>
    </nav>
  );
};

export default Header;
